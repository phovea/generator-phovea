{
  "files": [
    "src",
    "index.js",
    "phovea.js",
    "phovea_registry.js",
    "build"
  ],
  "scripts": {
    "clean": "rimraf dist lib && npm run clean:compile",
    "clean:compile": "rimraf src/**/*.map src/**/*.js src/**/*.d.ts tests/**/*.js tests/**/*.map tests/**/*.d.ts demo/**/*.js demo/**/*.map demo/**/*.d.ts",
    "compile": "tsc",
    "compile:watch": "tsc -w",
    "build:web": "npm run clean && npm run compile && npm run copy-assets && npm run copy-styles",
    "copy-assets": "if [ -d src/assets ]; then shx --verbose cp -R src/assets/. dist/assets/; fi",
    "copy-styles": "if [ -d src/scss ]; then shx --verbose cp -R src/scss/. dist/scss/; fi",
    "check": "flake8 --exclude=.git,venv,deploy,docs,__pycache__,node_modules",
    "docs:web": "typedoc --options typedoc.json src/",
    "docs:python": "sphinx-apidoc -o docs -f ./<%-name.toLowerCase()%> && sphinx-build ./docs build/docs",
    "docs": "npm run docs:web && npm run docs:python",
    "pretest:python": "npm run check",
    "pretest": "echo hybrid",
    "posttest:web": "npm run lint",
    "posttest": "echo hybrid",
    "test:web": "test ! $(find tests -name \"*.ts\") || jest",
    "test:python": "test ! $(find tests -name \"*.py\") || python setup.py test",
    "test": "npm run test:web && npm run test:python",
    "prebuild:python": "node -e \"process.exit(process.env.PHOVEA_SKIP_TESTS === undefined?1:0)\" || npm run test:python",
    "prebuild:web": "node -e \"process.exit(process.env.PHOVEA_SKIP_TESTS === undefined?1:0)\" || npm run test:web",
    "prebuild": "echo hybrid",
    "build:python": "rm -rf build/source && find . -name '*.pyc' -delete && node buildPython.js && cp -r ./<%-name.toLowerCase()%> build/source/",
    "build": "npm run build:web && npm run build:python",
    "predist:web": "npm run build:web && npm run docs:web",
    "predist:python": "npm run build:python && npm run docs:python",
    "predist": "echo hybrid",
    "dist:web": "mkdir lib && cd dist && tar cvzf ../lib/<%-name%>.tar.gz *",
    "dist:python": "python setup.py sdist bdist_wheel",
    "dist": "npm run dist:web && npm run dist:python"
  }
}
